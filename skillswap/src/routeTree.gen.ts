/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const UserIndexLazyImport = createFileRoute('/user/')()
const UserSkilldevelopIndexLazyImport = createFileRoute('/user/skilldevelop/')()
const UserRequestsIndexLazyImport = createFileRoute('/user/requests/')()
const UserMyProfileIndexLazyImport = createFileRoute('/user/myProfile/')()
const UserMessagesIndexLazyImport = createFileRoute('/user/messages/')()
const UserHomeIndexLazyImport = createFileRoute('/user/home/')()
const UserUsernameIndexLazyImport = createFileRoute('/user/$username/')()
const authSignupIndexLazyImport = createFileRoute('/(auth)/signup/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexLazyRoute = UserIndexLazyImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/user/index.lazy').then((d) => d.Route))

const UserSkilldevelopIndexLazyRoute = UserSkilldevelopIndexLazyImport.update({
  id: '/user/skilldevelop/',
  path: '/user/skilldevelop/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/skilldevelop/index.lazy').then((d) => d.Route),
)

const UserRequestsIndexLazyRoute = UserRequestsIndexLazyImport.update({
  id: '/user/requests/',
  path: '/user/requests/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/requests/index.lazy').then((d) => d.Route),
)

const UserMyProfileIndexLazyRoute = UserMyProfileIndexLazyImport.update({
  id: '/user/myProfile/',
  path: '/user/myProfile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/myProfile/index.lazy').then((d) => d.Route),
)

const UserMessagesIndexLazyRoute = UserMessagesIndexLazyImport.update({
  id: '/user/messages/',
  path: '/user/messages/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/messages/index.lazy').then((d) => d.Route),
)

const UserHomeIndexLazyRoute = UserHomeIndexLazyImport.update({
  id: '/user/home/',
  path: '/user/home/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/home/index.lazy').then((d) => d.Route),
)

const UserUsernameIndexLazyRoute = UserUsernameIndexLazyImport.update({
  id: '/user/$username/',
  path: '/user/$username/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/$username/index.lazy').then((d) => d.Route),
)

const authSignupIndexLazyRoute = authSignupIndexLazyImport
  .update({
    id: '/(auth)/signup/',
    path: '/signup/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signup/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup/': {
      id: '/(auth)/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/$username/': {
      id: '/user/$username/'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof UserUsernameIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/home/': {
      id: '/user/home/'
      path: '/user/home'
      fullPath: '/user/home'
      preLoaderRoute: typeof UserHomeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/messages/': {
      id: '/user/messages/'
      path: '/user/messages'
      fullPath: '/user/messages'
      preLoaderRoute: typeof UserMessagesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/myProfile/': {
      id: '/user/myProfile/'
      path: '/user/myProfile'
      fullPath: '/user/myProfile'
      preLoaderRoute: typeof UserMyProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/requests/': {
      id: '/user/requests/'
      path: '/user/requests'
      fullPath: '/user/requests'
      preLoaderRoute: typeof UserRequestsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/skilldevelop/': {
      id: '/user/skilldevelop/'
      path: '/user/skilldevelop'
      fullPath: '/user/skilldevelop'
      preLoaderRoute: typeof UserSkilldevelopIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/user': typeof UserIndexLazyRoute
  '/signup': typeof authSignupIndexLazyRoute
  '/user/$username': typeof UserUsernameIndexLazyRoute
  '/user/home': typeof UserHomeIndexLazyRoute
  '/user/messages': typeof UserMessagesIndexLazyRoute
  '/user/myProfile': typeof UserMyProfileIndexLazyRoute
  '/user/requests': typeof UserRequestsIndexLazyRoute
  '/user/skilldevelop': typeof UserSkilldevelopIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/user': typeof UserIndexLazyRoute
  '/signup': typeof authSignupIndexLazyRoute
  '/user/$username': typeof UserUsernameIndexLazyRoute
  '/user/home': typeof UserHomeIndexLazyRoute
  '/user/messages': typeof UserMessagesIndexLazyRoute
  '/user/myProfile': typeof UserMyProfileIndexLazyRoute
  '/user/requests': typeof UserRequestsIndexLazyRoute
  '/user/skilldevelop': typeof UserSkilldevelopIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/user/': typeof UserIndexLazyRoute
  '/(auth)/signup/': typeof authSignupIndexLazyRoute
  '/user/$username/': typeof UserUsernameIndexLazyRoute
  '/user/home/': typeof UserHomeIndexLazyRoute
  '/user/messages/': typeof UserMessagesIndexLazyRoute
  '/user/myProfile/': typeof UserMyProfileIndexLazyRoute
  '/user/requests/': typeof UserRequestsIndexLazyRoute
  '/user/skilldevelop/': typeof UserSkilldevelopIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/user'
    | '/signup'
    | '/user/$username'
    | '/user/home'
    | '/user/messages'
    | '/user/myProfile'
    | '/user/requests'
    | '/user/skilldevelop'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/user'
    | '/signup'
    | '/user/$username'
    | '/user/home'
    | '/user/messages'
    | '/user/myProfile'
    | '/user/requests'
    | '/user/skilldevelop'
  id:
    | '__root__'
    | '/'
    | '/user/'
    | '/(auth)/signup/'
    | '/user/$username/'
    | '/user/home/'
    | '/user/messages/'
    | '/user/myProfile/'
    | '/user/requests/'
    | '/user/skilldevelop/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  UserIndexLazyRoute: typeof UserIndexLazyRoute
  authSignupIndexLazyRoute: typeof authSignupIndexLazyRoute
  UserUsernameIndexLazyRoute: typeof UserUsernameIndexLazyRoute
  UserHomeIndexLazyRoute: typeof UserHomeIndexLazyRoute
  UserMessagesIndexLazyRoute: typeof UserMessagesIndexLazyRoute
  UserMyProfileIndexLazyRoute: typeof UserMyProfileIndexLazyRoute
  UserRequestsIndexLazyRoute: typeof UserRequestsIndexLazyRoute
  UserSkilldevelopIndexLazyRoute: typeof UserSkilldevelopIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  UserIndexLazyRoute: UserIndexLazyRoute,
  authSignupIndexLazyRoute: authSignupIndexLazyRoute,
  UserUsernameIndexLazyRoute: UserUsernameIndexLazyRoute,
  UserHomeIndexLazyRoute: UserHomeIndexLazyRoute,
  UserMessagesIndexLazyRoute: UserMessagesIndexLazyRoute,
  UserMyProfileIndexLazyRoute: UserMyProfileIndexLazyRoute,
  UserRequestsIndexLazyRoute: UserRequestsIndexLazyRoute,
  UserSkilldevelopIndexLazyRoute: UserSkilldevelopIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/user/",
        "/(auth)/signup/",
        "/user/$username/",
        "/user/home/",
        "/user/messages/",
        "/user/myProfile/",
        "/user/requests/",
        "/user/skilldevelop/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/user/": {
      "filePath": "user/index.lazy.tsx"
    },
    "/(auth)/signup/": {
      "filePath": "(auth)/signup/index.lazy.tsx"
    },
    "/user/$username/": {
      "filePath": "user/$username/index.lazy.tsx"
    },
    "/user/home/": {
      "filePath": "user/home/index.lazy.tsx"
    },
    "/user/messages/": {
      "filePath": "user/messages/index.lazy.tsx"
    },
    "/user/myProfile/": {
      "filePath": "user/myProfile/index.lazy.tsx"
    },
    "/user/requests/": {
      "filePath": "user/requests/index.lazy.tsx"
    },
    "/user/skilldevelop/": {
      "filePath": "user/skilldevelop/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
